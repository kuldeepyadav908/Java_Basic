package com.jlcindia.jdbc;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import com.jlcindia.jdbc.util.JDBCUtil;

public class Lab20 {

	public static void main(String[] args) {
		Account acc = new Account();
		acc.transfer(101, 102, 5000);

	}

}
class InsufficientFundException extends Exception{
	public String toString() {
		
		return "Sufficient Fund are Not Availabe";
	}
}
class InvalidAccountNumberException extends Exception{
	int accno;
	public InvalidAccountNumberException() {
	}
	public InvalidAccountNumberException(int accno) {
		this.accno = accno;
	}
	public String toString() {
		
		return "Accno:"+accno+"is Not Found";
	}
}
class Account{
	int bal;
	int dabal,sabal,danbal,sanbal;
	public void transfer(int sa,int da,int amt){
		Connection con = null;
		PreparedStatement ps1 = null;
		PreparedStatement ps2 = null;
		try{
			con = JDBCUtil.getMySQLConnection();
			
			//Starting Transaction
			con.setAutoCommit(false);
			
			//Operation 1 check Destination Account
			ps1 = con.prepareStatement("select balance from myaccounts where accno=?");
			ps1.setInt(1, da);
			ResultSet rs1 = ps1.executeQuery();
			if(rs1.next()){
				dabal = rs1.getInt(1);
			}else
				throw new InvalidAccountNumberException(da);
			danbal = dabal + amt;
			
			//Operation 2 Updating Destination Account
			ps2 = con.prepareStatement("update myaccounts set balance = ? where accno =?");
			ps2.setInt(1, danbal);
			ps2.setInt(2, da);
			ps2.executeUpdate();
			System.out.println("**"+da+"updated");
			
			//Operation 3 checking source Account
			ps1.setInt(1, sa);
			rs1 = ps1.executeQuery();
			if(rs1.next())
				sabal = rs1.getInt(1);
			else 
				throw new InvalidAccountNumberException(sa);
			
			if(sabal >= amt)
				sanbal = sabal - amt;
			else
				throw new InsufficientFundException();
				
			//Operation 4 Updating Source Account
			ps2.setInt(1, sanbal);
			ps2.setInt(2, sa);
			ps2.executeUpdate();
			con.commit();
			System.out.println("**"+sa+"updated");
			System.out.println("**Fund Transfered");
			
		}catch(Exception e){
			e.printStackTrace();
			try{
				con.rollback();
			}catch(Exception e1){
				
			}}finally{
				JDBCUtil.cleanup(ps1, con);
				JDBCUtil.cleanup(ps2, con);
		}
	}
}